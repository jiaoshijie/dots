# `man git-config`

# export GIT_AUTHOR_NAME="jiaoshijie"
# export GIT_AUTHOR_EMAIL="jiao1751959040@gmail.com"
# export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
# export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"
[user]
  email = jiao1751959040@gmail.com
  name = jiaoshijie

[init]
  defaultBranch = main

[core]
  autocrlf = input  # `intput`: do not perform converting CRLF to LF; `true`: ...
  safecrlf = true   # A file with mixed line endings would be reported by the core.safecrlf mechanism.
  eol = lf          # end of line using LF not CRLF
  excludesFile = ~/dots/git/ignore

[diff]
  algorithm = default  # TODO: maybe change it later
  colorMoved = default
  # https://stackoverflow.com/questions/37620729/in-the-context-of-git-and-diff-what-is-a-hunk
  indentHeuristic = true  # make diff message more readable
  # https://www.jvt.me/posts/2018/05/04/git-submodule-diff-formats/
  # `short` : only show uuid(old)..uuid(new)
  # `log`   : except uuid also show the title(summary) of each commit between uuid(old) and uuid(new)
  # `diff`  : show diff details like external repository(main repository, not submodule)
  submodule = log
  tool = nvimdiff  # NOTE: `git difftool`, if nvimdiff not available, git will ask you to chose another tool and vimdiff is the default(just use the default)

[help]
  autoCorrect = 0  # only show the suggested command, don't run

[merge]
  conflictStyle=diff3  # `merge`: doesn't have the original text(two regions); `diff3`: has the extra original text(three regions)
  # https://git-scm.com/docs/git-mergetool
  tool = nvimdiff  # `git mergetool`, same as diff.tool config

[alias]
  d = diff
  ds = diff --staged # review all of the staged changes before committing
  s = status
  ss = status --short
  c = commit
  cv = commit --verbose
  ca = commit --amend
  ai = add --patch # interactive add hunks
  l = log
  lo = log --oneline
  lg = log --graph
  lgo = log --graph --oneline
  co = checkout
